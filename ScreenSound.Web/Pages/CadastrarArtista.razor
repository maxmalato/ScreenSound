@page "/cadastrar-artistas"

@inject ArtistaAPI artistaAPI
@inject NavigationManager navigationManager

<MudPaper Class="px-8 pt-2 pb-4 mx-12 my-8" Justify="Justify.Center">

    <MudText Class="mt-8" Typo="Typo.h4">Cadastro do Artista</MudText>

    <MudForm>
        <MudTextField Class="mt-4" T="string" Placeholder="Nome do Artista"
                      @bind-Value="_nome"
                      Variant="Variant.Outlined"
                      Required="true"
                      RequiredError="Campo obrigatório." />

        <MudTextField Class="mt-4" T="string" Placeholder="Biografia do artista"
                      @bind-Value="_biografia"
                      Variant="Variant.Outlined"
                      Lines="4"
                      Required="true"
                      RequiredError="Campo obrigatório." />

        @if (!string.IsNullOrEmpty(_fileImage))
        {
            <MudImage Class="mt-4 rounded-3" Width="150" Height="220" Src="@_fileImage" ObjectFit="ObjectFit.Cover" />
        }

        <MudFileUpload T="IBrowserFile" FilesChanged="UploadFile" Accept=".jpeg" Class="mt-4">
            <ActivatorContent>
                <MudButton Variant="Variant.Filled"
                           Color="Color.Primary"
                           StartIcon="@Icons.Material.Filled.PhotoCamera"
                           HtmlTag="label">
                    Foto do perfil
                </MudButton>
            </ActivatorContent>
        </MudFileUpload>

        <div class="d-flex align-center justify-content-end gap-3 mt-4">
            <MudButton Variant="Variant.Outlined" Color="Color.Primary" Href="/artistas">
                Voltar
            </MudButton>

            <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="Cadastrar">
                Cadastrar
            </MudButton>
        </div>
    </MudForm>
</MudPaper>

@code {
    private string? _nome;
    private string? _biografia;
    private string? _fileImage;
    private string? _fotoPerfil;

    private async Task Cadastrar()
    {
        var request = new ArtistaRequest(_nome!, _biografia!, _fotoPerfil);

        await artistaAPI.AddArtistaAsync(request);

        navigationManager.NavigateTo("/artistas");
    }

    // Upload da imagem para um artista
    private async Task UploadFile(IBrowserFile file)
    {
        var format = "image/jpeg";
        var resizedImage = await file.RequestImageFileAsync(format, 200, 200);

        using var fileStream = resizedImage.OpenReadStream();
        using var memoryStream = new MemoryStream();
        await fileStream.CopyToAsync(memoryStream);

        var imageUpload = Convert.ToBase64String(memoryStream.ToArray());
        
        _fileImage = $"data:{format};base64, {imageUpload}";
        _fotoPerfil = imageUpload;
    }
}
